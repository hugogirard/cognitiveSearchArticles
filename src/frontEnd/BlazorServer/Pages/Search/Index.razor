@page "/"
@inject ISearchService _searchService
@inject NavigationManager _navigatorManager
@inject IJSRuntime _js

<div class="container-fluid">
    <div class="row">
        <div class="col-md">
            <EditForm Model="VM" OnValidSubmit="@HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="search" class="form-label">Search</label>
                    <input type="text" class="form-control" id="search" @bind-value="VM.SearchQuery" placeholder="Enter search query">
                </div>

                <button type="submit" class="btn btn-primary">Search</button>

            </EditForm>
        </div>
    </div>
</div>


@if (!string.IsNullOrEmpty(SearchResult.Facets.Key))
{
    <div class="container-fluid">
        <div class="row">
            <form class="row row-cols-lg-auto g-3 align-items-center">
                @foreach (var facet in SearchResult.Facets.Value)
                {
                    <div class="col-12">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault" @bind="facet.Checked">
                            <label class="form-check-label" for="flexCheckDefault">
                                @string.Concat(facet.Value, " [", facet.Count, "]")
                            </label>
                        </div>
                    </div>
                }
            </form>
        </div>
        <div class="row">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th scope="col">Title</th>
                        <th scope="col">Short Description</th>
                        <th scope="col">Category</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var article in SearchResult.Articles)
                    {
                    <tr>
                        <td>@article.Title</td>
                        <td>@article.ShortDescription</td>
                        <td>@article.Category</td>
                        <td>
                            <buton class="btn btn-primary" @onclick="async() => await View(article)">View</buton>
                        </td>
                    </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

}



@code {

    public SearchViewModel VM { get; set; } = new SearchViewModel();

    private ArticleResult SearchResult = new ArticleResult();

    private void Toggle(Facet facet)
    {

    }

    private async Task View(ArticleIndex article)
    {
        await LocalStorage.SetAsync(_js, "article", article);

        _navigatorManager.NavigateTo("/viewArticle");
    }

    private async Task HandleValidSubmit()
    {
        SearchResult = await _searchService.SearchAsync(VM.SearchQuery, string.Empty);
    }
}